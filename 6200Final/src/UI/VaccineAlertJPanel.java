/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package UI;

import java.awt.CardLayout;
import java.util.Calendar;
import java.util.Date;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import models.DayCare;
import models.StudentImmu;

/**
 *
 * @author 10643
 */
public class VaccineAlertJPanel extends javax.swing.JPanel {

    JPanel panel;
    DayCare dayCare;
    /**
     * Creates new form VaccineAlertJPanel
     */
    public VaccineAlertJPanel(JPanel panel, DayCare dayCare) {
        initComponents();
        this.panel = panel;
        this.dayCare = dayCare;
        populateVaccineJTable();
        
        this.setSize(700, 500);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        VaccineJTable = new javax.swing.JTable();
        BackjButton = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();

        VaccineJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Student Name", "Hib", "DTaP", "Polio", "Hepatitis B", "MMR", "Varicella", "Status"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.Integer.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(VaccineJTable);

        BackjButton.setFont(new java.awt.Font("宋体", 0, 14)); // NOI18N
        BackjButton.setText("Back");
        BackjButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BackjButtonActionPerformed(evt);
            }
        });

        jButton2.setFont(new java.awt.Font("宋体", 0, 14)); // NOI18N
        jButton2.setText("View");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 680, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(32, 32, 32)
                        .addComponent(BackjButton, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(84, 84, 84))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(BackjButton, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 324, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(51, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        
        int selectedRowIndex = VaccineJTable.getSelectedRow();
        if (selectedRowIndex < 0) {
            JOptionPane.showMessageDialog(this, "Please select a row from the table first", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        
        String name = (String)VaccineJTable.getValueAt(selectedRowIndex, 0);
        VaccineDetailsJPanel p = new VaccineDetailsJPanel(panel, dayCare, name);
        this.panel.add(p);
        CardLayout layout = (CardLayout) panel.getLayout();
        layout.next(panel);
        
    }//GEN-LAST:event_jButton2ActionPerformed

    private void BackjButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BackjButtonActionPerformed
        panel.remove(this);
        CardLayout layout = (CardLayout) panel.getLayout();
        layout.previous(panel);
    }//GEN-LAST:event_BackjButtonActionPerformed
    public void populateVaccineJTable() {
        DefaultTableModel model = (DefaultTableModel) VaccineJTable.getModel();

        String status = "Alert";
        model.setRowCount(0);

        for (int i=0;i<dayCare.getStudentlmmus().size();i=i+6) {
                dayCare.getStudentlmmus().get(i);
                dayCare.getStudentlmmus().get(i+1);
                Object[] row = new Object[8];
                row[0] = dayCare.getStudentlmmus().get(i).getStudentName();
                row[1] = dayCare.getStudentlmmus().get(i).getDoseAccepted();
                row[2] = dayCare.getStudentlmmus().get(i+1).getDoseAccepted();
                row[3] = dayCare.getStudentlmmus().get(i+2).getDoseAccepted();
                row[4] = dayCare.getStudentlmmus().get(i+3).getDoseAccepted();
                row[5] = dayCare.getStudentlmmus().get(i+4).getDoseAccepted();
                row[6] = dayCare.getStudentlmmus().get(i+5).getDoseAccepted();
                if(VaccineStatus(dayCare.getStudentlmmus().get(i)) == "Normal"&&
                        VaccineStatus(dayCare.getStudentlmmus().get(i+1)) == "Normal"&&
                        VaccineStatus(dayCare.getStudentlmmus().get(i+2)) == "Normal"&&
                        VaccineStatus(dayCare.getStudentlmmus().get(i+3)) == "Normal"&&
                        VaccineStatus(dayCare.getStudentlmmus().get(i+4)) == "Normal"&&
                        VaccineStatus(dayCare.getStudentlmmus().get(i+5)) == "Normal"){
                    status = "Normal";
                }
                row[7] = status;
                
                
                model.addRow(row);
                status = "Alert";
        }
    }
    public static String VaccineStatus(StudentImmu si) {
        
        Date date = new Date();
        Calendar cal1 = Calendar.getInstance();
        cal1.setTime(date);
        
        String name = si.getVaccineName();
        switch(name){
            case("Hib"):
                if(si.getDoseAccepted()>0){
                    return "Normal";
                }
                break;
            case("DTaP"):
                if(si.getAge()<47 && si.getDoseAccepted() == 4){
                    return "Normal";
                }else if(si.getAge()>47 && si.getAge()<48 && si.getDoseAccepted() < 4){
                    return "Upcoming";
                }
                else if(si.getAge()>=48 && si.getDoseAccepted() == 4){
                    return "Normal";
                }else if(si.getDoseAccepted() == 5){
                    return "Normal";
                }
                break;
            case("Polio"):
                if(si.getAge()<47 && si.getDoseAccepted() == 3){
                    return "Normal";
                }else if(si.getAge()>=47 && si.getAge()<48 && si.getDoseAccepted() == 3){
                    return "Upcoming";
                }else if(si.getAge()>=48 && si.getDoseAccepted() == 3){
                    return "Normal";
                }else if(si.getDoseAccepted() == 5){
                    return "Normal";
                }
                break;
            case("Hepatitis B"):
                if(si.getDoseAccepted() == 3){
                    return "Normal";
                }
                break;
            case("MMR"):
                if(si.getAge()<11 && si.getDoseAccepted() == 0){
                    return "Normal";
                }else if(si.getAge()>=11 && si.getAge()<12 && si.getDoseAccepted() == 0){
                    return "Upcoming";
                } else if(si.getAge()>=12 && si.getDoseAccepted() == 1){
                    return "Upcoming";
                } else if(si.getAge()>=12 && si.getDoseAccepted() == 2){
                    return "Normal";
                }
                break;
            case("Varicella"):
                if(si.getAge()<11 && si.getDoseAccepted() == 0){
                    return "Normal";
                }else if(si.getAge()>=11 && si.getAge()<12 && si.getDoseAccepted() == 0){
                    return "Upcoming";
                } else if(si.getAge()>=12 && si.getDoseAccepted() == 1){
                    return "Upcoming";
                } else if(si.getAge()>=12 && si.getDoseAccepted() == 2){
                    return "Normal";
                } 
                break;
            default:
                return "Overdue";
        }
        return "Overdue";
        }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BackjButton;
    private javax.swing.JTable VaccineJTable;
    private javax.swing.JButton jButton2;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
